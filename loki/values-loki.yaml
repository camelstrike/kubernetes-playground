loki:
  auth_enabled: false

  limits_config:
    enforce_metric_name: false
    reject_old_samples: true
    reject_old_samples_max_age: 168h
    max_cache_freshness_per_query: 10m
    split_queries_by_interval: 15m

  storage:
    bucketNames:
      chunks: loki-chunks
      ruler: loki-ruler
      admin: loki-admin
    type: s3
    s3:
      endpoint: http://minio.minio.svc:9000
      accessKeyId: loki
      secretAccessKey: loki1234
      s3ForcePathStyle: true
      insecure: false
      http_config:
        insecure_skip_verify: true

  query_scheduler:
    max_outstanding_requests_per_tenant: 10000

write:
  replicas: 2
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

read:
  replicas: 1
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 60
  persistence:
    enableStatefulSetAutoDeletePVC: false

gateway:
  enabled: true
  replicas: 1
  resources:
    limits:
      cpu: 100m
      memory: 50Mi
    requests:
      cpu: 100m
      memory: 50Mi
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 60

  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      cert-manager.io/cluster-issuer: "clusterissuer"
    hosts:
      - host: loki.local
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: loki-gateway-tls
        hosts:
          - loki.local

monitoring:
  dashboards:
    enabled: true
    namespace: kube-prometheus-stack
    labels:
      grafana_dashboard: "1"
  rules:
    enabled: true
    alerting: true
    labels:
      release: kube-prometheus-stack
    additionalGroups:
      - name: additional-loki-rules
        rules:
          - record: job:loki_request_duration_seconds_bucket:sum_rate
            expr: sum(rate(loki_request_duration_seconds_bucket[1m])) by (le, job)
          - record: job_route:loki_request_duration_seconds_bucket:sum_rate
            expr: sum(rate(loki_request_duration_seconds_bucket[1m])) by (le, job, route)
          - record: node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate
            expr: sum(rate(container_cpu_usage_seconds_total[1m])) by (node, namespace, pod, container)
  alerts:
    enabled: true
    namespace: kube-prometheus-stack
    labels:
      release: kube-prometheus-stack
  serviceMonitor:
    enabled: true
    namespace: kube-prometheus-stack
    namespaceSelector:
      matchNames:
        - loki
    labels:
      release: kube-prometheus-stack

  selfMonitoring:
    enabled: true
    lokiCanary:
      enabled: true
