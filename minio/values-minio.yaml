---
mode: distributed

rootUser: "root"
rootPassword: "root1234"

drivesPerNode: 1
replicas: 3
pools: 1

persistence:
  enabled: true
  storageClass: ""
  VolumeName: ""
  accessMode: ReadWriteOnce
  size: 10Gi

consoleIngress:
  enabled: true
  ingressClassName: "nginx"
  path: /
  hosts:
    - console.minio.local
  tls:
   - secretName: chart-example-tls
     hosts:
       - console.minio.local

resources:
  requests:
    cpu: 100m
    memory: 2Gi

policies:
- name: loki-policy
  statements:
    - resources:
        - 'arn:aws:s3:::loki-*/*'
      actions:
        - "s3:AbortMultipartUpload"
        - "s3:GetObject"
        - "s3:DeleteObject"
        - "s3:PutObject"
        - "s3:ListMultipartUploadParts"
    - resources:
        - 'arn:aws:s3:::loki-*'
      actions:
        - "s3:CreateBucket"
        - "s3:DeleteBucket"
        - "s3:GetBucketLocation"
        - "s3:ListBucket"
        - "s3:ListBucketMultipartUploads"

users:
  - accessKey: admin
    secretKey: admin123
    policy: consoleAdmin
  - accessKey: loki
    secretKey: loki1234
    policy: loki-policy

buckets:
  - name: loki-chunks
    policy: none
    purge: false
  - name: loki-ruler
    policy: none
    purge: false
  - name: loki-admin
    policy: none
    purge: false

metrics:
  serviceMonitor:
    enabled: true
    includeNode: true
    public: true
    additionalLabels:
      release: kube-prometheus-stack
